# Copyright KubeSphere Authors
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

##################################################################################################
# This file defines the services, deployments, Gateway CR, GatewayRouteConfig CR, Configuration CR for the Bookinfo sample.
#
# To apply all 4 Bookinfo services, their corresponding resources:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml
#
# Alternatively, you can deploy any resource separately:
#
#   kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -l service=reviews-v1 # reviews Service
##################################################################################################

##################################################################################################
# Gateway services
##################################################################################################
---
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: Gateway
metadata:
  name: springcloud-gateway
  labels:
    springcloud.kubesphere.io/is-default-gateway: 'true'
  finalizers:
    - springcloud.kubesphere.io/finalizer
spec:
  deployment:
    replicas: 1
    selector:
      matchLabels:
        app: springcloud-gateway
    strategy: {}
    template:
      metadata:
        labels:
          app: springcloud-gateway
          springcloud.kubesphere.io/app: springcloud-gateway
      spec:
        containers:
          - image: 'registry.cn-beijing.aliyuncs.com/kse/spring-cloud-gateway:v0.1.0'
            imagePullPolicy: IfNotPresent
            name: springcloud-gateway
            ports:
              - containerPort: 8080
                name: http-0
                protocol: TCP
            resources: {}
  service:
    ports:
      - name: http-0
        port: 8080
        protocol: TCP
        targetPort: 8080
    type: ClusterIP
##################################################################################################
# Details service
##################################################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-v1
  labels:
    app: details-v1
    springcloud.kubesphere.io/app: details-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: details-v1
      springcloud.kubesphere.io/app: details-v1
  template:
    metadata:
      labels:
        app: details-v1
        springcloud.kubesphere.io/app: details-v1
    spec:
      containers:
      - name: details
        image: kubesphere/springcloud-bookinfo-details-v1:v0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        securityContext: {}
---
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: GatewayRouteConfig
metadata:
  name: details-v1
spec:
  gateway: springcloud-gateway
  routes:
    - id: details-v1
      order: 1
      predicates:
        - Path=/api/v1/products/*
      uri: 'lb://details-v1'
---
# Not required
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: Configuration
data:
  details-v1.properties: |-
    management.endpoints.web.exposure.include=*
metadata:
  name: details-v1
  labels:
    springcloud.kubesphere.io/configuration.name: details-v1
  finalizers:
    - springcloud.kubesphere.io/finalizer
  annotations:
    kubesphere.io/configuration-data: |-
      management.endpoints.web.exposure.include=*
    springcloud.kubesphere.io/dataid: details-v1.properties
    springcloud.kubesphere.io/extension: properties
    springcloud.kubesphere.io/group: DEFAULT_GROUP
---
##################################################################################################
# Ratings service
##################################################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-v1
  labels:
    app: ratings-v1
    springcloud.kubesphere.io/app: ratings-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings-v1
      springcloud.kubesphere.io/app: ratings-v1
  template:
    metadata:
      labels:
        app: ratings-v1
        springcloud.kubesphere.io/app: ratings-v1
    spec:
      containers:
      - name: ratings
        image: kubesphere/springcloud-bookinfo-ratings-v1:v0.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        securityContext: {}
---
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: GatewayRouteConfig
metadata:
  name: ratings-v1
spec:
  gateway: springcloud-gateway
  routes:
    - id: ratings-v1
      order: 1
      predicates:
        - Path=/api/v1/reviews/*/ratings
      uri: 'lb://ratings-v1'
---
##################################################################################################
# Reviews service
##################################################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v1
  labels:
    app: reviews-v1
    springcloud.kubesphere.io/app: reviews-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews-v1
      springcloud.kubesphere.io/app: reviews-v1
  template:
    metadata:
      labels:
        app: reviews-v1
        springcloud.kubesphere.io/app: reviews-v1
    spec:
      containers:
      - name: reviews
        image: kubesphere/springcloud-bookinfo-reviews-v1:v0.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext: {}
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v2
  labels:
    app: reviews-v2
    springcloud.kubesphere.io/app: reviews-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews-v2
      springcloud.kubesphere.io/app: reviews-v2
  template:
    metadata:
      labels:
        app: reviews-v2
        springcloud.kubesphere.io/app: reviews-v2
    spec:
      containers:
      - name: reviews
        image: kubesphere/springcloud-bookinfo-reviews-v2:v0.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext: {}
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-v3
  labels:
    app: reviews-v3
    springcloud.kubesphere.io/app: reviews-v3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reviews-v3
      springcloud.kubesphere.io/app: reviews-v3
  template:
    metadata:
      labels:
        app: reviews-v3
        springcloud.kubesphere.io/app: reviews-v3
    spec:
      containers:
      - name: reviews
        image: kubesphere/springcloud-bookinfo-reviews-v3:v0.1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: LOG_DIR
          value: "/tmp/logs"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: wlp-output
          mountPath: /opt/ibm/wlp/output
        securityContext: {}
      volumes:
      - name: wlp-output
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
# Grayscale Release reviews-v1, reviews-v2
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: GatewayRouteConfig
metadata:
  name: reviews-v1
spec:
  gateway: springcloud-gateway
  routes:
    - id: reviews-v1
      order: 1
      predicates:
        - Path=/api/v1/products/*/reviews
        - Weight=reviews, 50
      uri: 'lb://reviews-v1'
---
apiVersion: springcloud.kubesphere.io/v1alpha1
kind: GatewayRouteConfig
metadata:
  name: reviews-v2
spec:
  gateway: springcloud-gateway
  routes:
    - id: reviews-v2
      order: 1
      predicates:
        - Path=/api/v1/products/*/reviews
        - Weight=reviews, 50
      uri: 'lb://reviews-v2'
---
##################################################################################################
# Productpage services
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: productpage-v1
  labels:
    app: productpage-v1
    service: productpage-v1
spec:
  ports:
  - port: 3000
    name: http
  selector:
    app: productpage-v1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productpage-v1
  labels:
    app: productpage-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productpage-v1
  template:
    metadata:
      labels:
        app: productpage-v1
    spec:
      containers:
      - name: productpage
        image: kubesphere/springcloud-bookinfo-productpage-v1:v0.1.0
        imagePullPolicy: IfNotPresent
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: API_SERVER
            value: 'http://springcloud-gateway.$(NAMESPACE).svc:8080'
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        securityContext: {}
      volumes:
      - name: tmp
        emptyDir: {}
---
